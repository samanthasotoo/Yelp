-- Create dim_business table with primary key
CREATE TABLE yelp.dim_business (
    business_id STRING NOT NULL,
    name STRING,
    address STRING,
    city STRING,
    state STRING,
    postal_code STRING,
    latitude FLOAT64,
    longitude FLOAT64,
    is_open INT64,
    byappointmentonly BOOL,
    businessacceptscreditcards BOOL,
    bikeparking BOOL,
    restaurantspricerange2 STRING,
    coatcheck BOOL,
    restaurantstakeout BOOL,
    restaurantsdelivery BOOL,
    caters STRING,
    wifi STRING,
    businessparking STRING,
    wheelchairaccessible STRING,
    happyhour STRING,
    outdoorseating STRING,
    hastv STRING,
    restaurantsreservations STRING,
    dogsallowed STRING,
    alcohol STRING,
    goodforkids STRING,
    restaurantsattire STRING,
    ambience STRING,
    restaurantstableservice STRING,
    restaurantsgoodforgroups STRING,
    drivethru STRING,
    noiselevel STRING,
    goodformeal STRING,
    businessacceptsbitcoin STRING,
    smoking STRING,
    music STRING,
    goodfordancing STRING,
    acceptsinsurance STRING,
    bestnights STRING,
    byob STRING,
    corkage STRING,
    byobcorkage STRING,
    hairspecializesin STRING,
    open24hours STRING,
    restaurantscounterservice STRING,
    agesallowed STRING,
    dietaryrestrictions STRING,
    PRIMARY KEY (business_id) NOT ENFORCED
);

-- Create dim_date table with unique constraint
CREATE TABLE yelp.dim_date (
    date DATE,
    dateoriginal STRING,
    dateiso DATE,
    year INT64,
    monthnumber INT64,
    monthname STRING,
    day INT64,
    dayname STRING,
    hour INT64,
    weeknumber INT64,
    weekofmonth INT64,
   PRIMARY KEY (date) NOT ENFORCED
);

-- Create dim_user table with primary key
CREATE TABLE yelp.dim_user (
    user_id STRING NOT NULL,
    name STRING,
    review_count INT64,
    yelping_since DATE,
    friends STRING,
    useful INT64,
    funny INT64,
    cool INT64,
    fans INT64,
    PRIMARY KEY (user_id) NOT ENFORCED
);

-- Create review_fact table with primary key and foreign keys
CREATE TABLE yelp.review_fact (
    review_id STRING NOT NULL,
    user_id STRING,
    business_id STRING,
    date DATE,
    useful INT64,
    funny INT64,
    cool INT64,
    stars INT64,
    PRIMARY KEY (review_id) NOT ENFORCED,
    FOREIGN KEY (business_id) REFERENCES yelp.dim_business(business_id) NOT ENFORCED,
    FOREIGN KEY (user_id) REFERENCES yelp.dim_user(user_id) NOT ENFORCED,
    FOREIGN KEY (date) REFERENCES yelp.dim_date(date) NOT ENFORCED
);


-- Create tip_fact table with primary key and foreign keys
CREATE TABLE yelp.tip_fact (
    date DATE NOT NULL,
    compliment_count INT64,
    business_id STRING NOT NULL,
    user_id STRING NOT NULL,
    PRIMARY KEY (date, user_id, business_id) NOT ENFORCED, 
    FOREIGN KEY (business_id) REFERENCES yelp.dim_business(business_id) NOT ENFORCED,
    FOREIGN KEY (user_id) REFERENCES yelp.dim_user(user_id) NOT ENFORCED,
    FOREIGN KEY (date) REFERENCES yelp.dim_date(date) NOT ENFORCED
);


ALTER table yelp.dim_user
ADD FOREIGN KEY(yelping_since) references yelp.dim_date(date) NOT ENFORCED
;
